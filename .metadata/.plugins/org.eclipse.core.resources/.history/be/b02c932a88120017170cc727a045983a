package stronglyConnectedComponents;

import java.util.ArrayList;

public class DFS {

	public static void depthFirstSearch(Graph graph, Node v) {

		graph.resetNodesToUnexplored();
		dfs(graph, v);
	}

	private static void dfs(Graph graph, Node v) {

		// mark v as explored
		System.out.println("Visited Node: " + v.toString());
		v.explored = true;
		// for each edge(v,w), if w is unexplored call dfs on w
		ArrayList<Node> adjNodes = graph.edgeMap.get(v);
		if (!adjNodes.isEmpty()) {
			for (Node n : adjNodes) {
				if (n.explored == false) {
					dfs(graph, n);
				}
			}
		}
	}
}
