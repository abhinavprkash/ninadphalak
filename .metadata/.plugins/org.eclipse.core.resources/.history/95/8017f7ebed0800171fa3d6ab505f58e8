package kargerMinCut;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.HashMap;

public class Main {

	public static void main(String[] args) {
		//String path = args[0];
		String inputPath = "/home/ninad/workspace/java_personal/karger1.txt";
		Path path = Paths.get(inputPath);
		//HashMap contains Adjacency list mapping of each vertex to it's adjacent vertices
		//Key Point: Parallel edges between vertices are denoted by duplicate node in the ArrayList
		HashMap<Node,ArrayList<Node>> graphMap = new HashMap<Node,ArrayList<Node>>();
		try {
			BufferedReader reader = Files.newBufferedReader(path);
			String line = null;
			while((line = reader.readLine()) != null){
				String[] nodesInLine = line.split("\\s");
				ArrayList<Node> adjacentNodes = new ArrayList<Node>();
				for(int i = 1 ; i < nodesInLine.length; i++){
					adjacentNodes.add(Integer.parseInt(nodesInLine[i]));
				}
				graphMap.put(nodesInLine[0], value)
			}
			
		} catch (IOException e) {
			
			e.printStackTrace();
		}
		

	}
}
