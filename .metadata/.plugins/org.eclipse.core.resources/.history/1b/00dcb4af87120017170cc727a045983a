package stronglyConnectedComponents;


public class Node {
	Integer nodeId;
	boolean explored = false;
	
	public Node(int nodeId){
		this.nodeId = nodeId;
	}
	public Node(){
		
	}
	
	public void markUnexplored(){
		this.explored=false;
	}
	

	@Override
	public String toString() {

		return nodeId.toString();
	}
	
	@Override
	public boolean equals(Object other) {

		if (!(other instanceof Node)) {
			return false;
		}
		Node otherNode = (Node) other;
		return this.nodeId.equals(otherNode.nodeId);
	}

	@Override
	public int hashCode() {

		int hashCode = 1;
		hashCode = hashCode * 37 + this.id.hashCode();
		return hashCode;
	}
}
