package quicksort;

import java.util.Arrays;

public class Quicksort {
	
	public static void sort(int[] numbers, int startIndex, int endIndex){
		if(startIndex < endIndex){
			System.out.println(Arrays.toString(numbers) + ", " + startIndex+ ", " +endIndex);
			int pivotIndex = partition(numbers,startIndex, endIndex);
			System.out.println("pivotIndex is: " + pivotIndex);
			sort(numbers,startIndex, pivotIndex-1 );
			sort(numbers, pivotIndex+1, endIndex);
			
		}
	}
	
	private static int partition(int[] numbers, int startIndex, int endIndex){
		int pivot = numbers[startIndex];
		int i = startIndex+1;
		for(int j = startIndex+1 ; j< endIndex - startIndex +1 ; j++){
			if(numbers[j] < pivot){//else numbers[j]>pivot so just increment j
				//swap with leftmost element of right(greater than pivot) array
				int temp = numbers[i];
				numbers[i] = numbers[j];
				numbers[j] = temp;
				i++;
			}
		}
		//swap pivot rightmost element of left(less than pivot) array
		int temp = pivot;
		numbers[startIndex] = numbers[i-1];
		numbers[i-1] = temp;
		return i-1;
	}
	

}
